plugins {
    id 'com.gradle.develocity' version '3.18.1'
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '2.0.2'
}

def isCI = System.getenv('CI') != null
def isLocal = !isCI
def isAuthenticated = System.getenv('DEVELOCITY_ACCESS_KEY') != null
def isBuildCacheAuthenticated =
        System.getenv('DEVELOCITY_BUILD_CACHE_NODE_USER') != null &&
        System.getenv('DEVELOCITY_BUILD_CACHE_NODE_KEY') != null

develocity {
    server = 'https://ge.grails.org'
    buildScan {
        publishing.onlyIf { isAuthenticated }
        uploadInBackground = isLocal
    }
}

buildCache {
    local { enabled = isLocal }
    remote(develocity.buildCache) {
        push = isCI && isBuildCacheAuthenticated
        enabled = true
        usernameAndPassword(
                System.getenv('DEVELOCITY_BUILD_CACHE_NODE_USER') ?: '',
                System.getenv('DEVELOCITY_BUILD_CACHE_NODE_KEY') ?: ''
        )
    }
}

rootProject.name = 'grails.core.ROOT'

include (
        'grails-bootstrap',
        'grails-codecs',
        'grails-console',
        'grails-core',
        'grails-databinding',
        'grails-docs',
        'grails-encoder',
        'grails-logging',
        'grails-shell',
        'grails-spring',
        'grails-test',
        'grails-web',
        'grails-web-common',
        'grails-web-boot',
        'grails-web-databinding',
        'grails-web-mvc',
        'grails-web-url-mappings',

        // POM / BOMs
        'grails-dependencies',
        'grails-bom',

        // Plugins
        'grails-plugin-codecs',
        'grails-plugin-controllers',
        'grails-plugin-databinding',
        'grails-plugin-datasource',
        'grails-plugin-domain-class',
        'grails-plugin-interceptors',
        'grails-plugin-i18n',
        'grails-plugin-mimetypes',
        'grails-plugin-rest',
        'grails-plugin-services',
        'grails-plugin-url-mappings',
        'grails-plugin-validation',

        // Test Suite
        'grails-test-suite-base',
        'grails-test-suite-persistence',
        'grails-test-suite-uber',
        'grails-test-suite-web',

        // Gradle Plugin
        'grails-gradle-model'
)