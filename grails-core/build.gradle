configurations {
    optional
}
dependencies {
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    compile( "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:${concurrentlinkedhashmapVersion}" ) {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework.boot:spring-boot:$springBootVersion")
    compile("org.springframework:spring-core:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-tx:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-beans:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-context:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    compile("org.springframework:spring-test:${springVersion}") {
        exclude group: 'commons-logging', module:'commons-logging'
        ext.notInPom = true
    }

    // Used by Spring AOP
    optional 'aopalliance:aopalliance:1.0',
             "org.aspectj:aspectjrt:$aspectjVersion"

    runtime ( 'xalan:serializer:2.7.1' ) {
        exclude group: 'xml-apis', module:'xml-apis'
    }

    optional ("org.springframework:springloaded:$springLoadedVersion")



    compile project(":grails-bootstrap"), {
        exclude group:"org.fusesource.jansi", module:"jansi"
        exclude group:"jline", module:"jline"
        exclude group:"net.java.dev.jna", module:"jna"

        // Ant
        exclude group:"org.codehaus.groovy", module:"groovy-ant"
        exclude group:"org.apache.ant", module:"ant"
        exclude group:"org.apache.ant", module:"ant-launcher"
        exclude group:"org.apache.ivy", module:"ivy"
        exclude group:"org.apache.ant", module:"ant-trax"
        exclude group:"org.apache.ant", module:"ant-junit"

        exclude group:"org.codehaus.gant", module:"gant_groovy1.8"
    }

    compile project(":grails-spring"), {
        exclude group:'org.springframework', module:'spring-tx'
        exclude group:'org.springframework', module:'spring-web'
        exclude group:'org.grails', module:'grails-bootstrap'
    }

    // These dependencies are not required, but due to a Groovy compiler bug they are loaded by Groovy and hence
    // have to be on the path for compilation even though they shouldn't be
    optional "org.apache.ant:ant:${antVersion}"
    optional "jline:jline:$jlineVersion"
    optional "org.fusesource.jansi:jansi:$jansiVersion"
    optional("org.codehaus.gant:gant_groovy1.8:${gantVersion}") {
        exclude group:'commons-cli', module:'commons-cli'
        exclude group:'org.apache.ant', module:'ant'
    }

}

sourceSets {
    main {
        compileClasspath += files(configurations.optional)
    }
    test {
        compileClasspath += files(configurations.optional)
        runtimeClasspath += files(configurations.optional)
    }
}
javadoc.classpath += files(configurations.optional)
compileGroovy.doFirst {
    delete("${buildDir}/classes/main/META-INF")
    ant.mkdir(dir:sourceSets.main.output.classesDir)
    ant.propertyfile(file:"${sourceSets.main.output.classesDir}/grails.build.properties") {
         entry key:"grails.version", value:version
    }
}

eclipse {
    classpath {
       file {
           whenMerged { classpath ->
                // don't add global ASTs since the source code is in this project and that causes greclipse compilation to fail
                classpath.entries.find { entry -> entry.kind == 'src' && entry.path == "src/main/resources" }?.excludes=["META-INF/services/org.codehaus.groovy.transform.ASTTransformation"]
           }
       }
    }
}
