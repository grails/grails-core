configurations {
    optional
}
dependencies {

    compile "org.springframework:spring-tx:${springVersion}"

    // Testing
    compile "org.codehaus.groovy:groovy-test:$groovyVersion", {
        transitive = false
        exclude group:'junit', module: 'junit'
        exclude group:'org.codehaus.groovy', module: 'groovy'
        exclude group:'org.hamcrest', module: 'hamcrest-core'
    }
    compile "junit:junit:${junitVersion}", {
        exclude group:'org.hamcrest', module: 'hamcrest-core'
    }
    compile("org.spockframework:spock-core:${spockVersion}") {
        transitive = false
        exclude group:'junit', module: 'junit-dep'
        exclude group:'org.codehaus.groovy', module: 'groovy-all'
    }

    // needed for Spock
    compile 'org.objenesis:objenesis:1.4'

    compile project(":grails-plugin-converters"), project(":grails-plugin-mimetypes")
    compile project(":grails-web")

    // command line requirements
    optional  "jline:jline:$jlineVersion"
    optional "org.fusesource.jansi:jansi:$jansiVersion"

    // Ant
    optional "org.apache.ant:ant:${antVersion}"
    optional "org.apache.ant:ant-junit:${antVersion}"

    // needed for Spock
    compile "org.objenesis:objenesis:${objenesisVersion}"
}

sourceSets {
    main {
        compileClasspath += files(configurations.optional)
    }
    test {
        compileClasspath += files(configurations.optional)
        runtimeClasspath += files(configurations.optional)
    }
}
javadoc.classpath += files(configurations.optional)
