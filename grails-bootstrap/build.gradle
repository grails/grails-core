import org.apache.tools.ant.filters.ReplaceTokens

configurations {
    uaa.extendsFrom compile
}
dependencies {
    compile("org.springframework:spring-core:${springVersion}") {
        exclude module:"commons-logging"
    }

    // UAA client dependency, optional
    uaa("org.springframework.uaa:org.springframework.uaa.client:1.0.1.RELEASE") {
        ["protobuf-java-lite", "json-simple", "bcpg-jdk15", "bcprov-jdk15"].each { dep ->
            exclude group: "org.springframework.roo.wrapping", module: "org.springframework.roo.wrapping." + dep
        }
    }

    // These 3 are required by UAA but not Grails (non OSGI version of excludes above)
    uaa 'com.google.protobuf:protobuf-java:2.4.1',
             'com.googlecode.json-simple:json-simple:1.1',
             "org.bouncycastle:bcpg-jdk15:1.45"

    compile "org.fusesource.jansi:jansi:$jansiVersion",
            "jline:jline:$jlineVersion",
            "net.java.dev.jna:jna:$jnaVersion"

    // Ant
    compile "org.apache.ant:ant:${antVersion}",
            "org.apache.ant:ant-launcher:${antVersion}",
            "org.apache.ant:ant-trax:${antTraxVersion}",
            "org.apache.ivy:ivy:${ivyVersion}"

    compile("org.apache.ant:ant-junit:${antVersion}") {
        exclude module:'junit'
    }

    compile("org.codehaus.gant:gant_groovy1.8:${gantVersion}") {
        exclude module:'commons-cli'
    }
}

sourceSets {
    uaa {
        compileClasspath = files(configurations.uaa, main.output)
        groovy.srcDirs = ['src/uaa/groovy']
        resources.srcDirs = []
    }
}
processResources {
    inputs.property "version", version
    filter(ReplaceTokens, tokens:[version:version])
}

jar.appendix = 'bootstrap'
jar {
    from compileUaaGroovy.outputs.files
}


eclipse {
	classpath {
		plusConfigurations += configurations.uaa
	}
}