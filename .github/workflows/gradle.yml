name: Java CI
on:
  push:
    branches:
      - master
      - '[4-9]+.[1-9]+.x'
  pull_request:
    branches:
      - master
      - '[4-9]+.[1-9]+.x'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '14']
    env:
      WORKSPACE: ${{ github.workspace }}
      GRADLE_OPTS: -Xmx1500m -Dfile.encoding=UTF-8
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Optional setup step
        run: |
          [ -f ./setup.sh ] && ./setup.sh || true
      - name: Run Tests
        run: |
          (set -x; ./gradlew clean classes --no-daemon)
          (set -x; ./gradlew testClasses --no-daemon)
          ./gradlew --stop
          (set -x; ./gradlew grails-test-suite-persistence:test grails-test-suite-uber:test grails-test-suite-web:test --no-daemon)
          ./gradlew --stop
          (set -x; ./gradlew check -x grails-test-suite-persistence:test -x grails-test-suite-uber:test -x grails-test-suite-web:test --no-daemon)
      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Run Assemble
        if: success() && github.event_name == 'push' && matrix.java == '8'
        run: ./gradlew assemble
      - name: Publish to repo.grails.org
        if: success() && github.event_name == 'push' && matrix.java == '8'
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          ./gradlew publish
      - name: Extract branch name
        if: success() && github.event_name == 'push' && matrix.java == '8'
        id: extract_branch
        run: echo ::set-output name=value::${GITHUB_REF:11}
      - name: Create Snapshot Message for the Workflow Dispatch
        if: success() && github.event_name == 'push' && matrix.java == '8'
        id: dispatch_message
        run: echo ::set-output name=value::{\"message\":\"New Core Snapshot $(date) - $GITHUB_SHA\"}
      - name: Invoke the Java CI workflow in Grails Functional Tests
        if: success() && github.event_name == 'push' && matrix.java == '8'
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Java CI
          repo: grails/grails3-functional-tests
          ref: ${{ steps.extract_branch.outputs.value }}
          token: ${{ secrets.GH_TOKEN }}
          inputs: ${{ steps.dispatch_message.outputs.value }}
