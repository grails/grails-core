name: Java CI
on:
  push:
    branches:
      - '[4-9]+.[0-9]+.x'
      - '[3-9]+.[3-9]+.x'
  pull_request:
    branches:
      - '[4-9]+.[0-9]+.x'
      - '[3-9]+.[3-9]+.x'
  workflow_dispatch:
permissions:
  contents: read  #  to fetch code (actions/checkout)
jobs:
  build:
    permissions:
      contents: read  #  to fetch code (actions/checkout)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Run Build
        id: build
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: build
  publish:
    permissions:
      contents: read  #  to fetch code (actions/checkout)
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: ['build']
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Publish to Artifactory (repo.grails.org)
        id: publish
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        with:
          arguments: -Dorg.gradle.internal.publish.checksums.insecure=true publish
      - name: Extract branch name
        if: success()
        id: extract_branch
        run: echo "value=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: Create Snapshot Message for the Workflow Dispatch
        if: success()
        id: dispatch_message
        run: echo "value={\"message\":\"New Core Snapshot $(date) - $GITHUB_SHA\"}" >> $GITHUB_OUTPUT
      - name: Invoke the Java CI workflow in Grails Functional Tests
        if: success()
        uses: benc-uk/workflow-dispatch@v1.2
        with:
          workflow: Java CI
          repo: grails/grails-functional-tests
          ref: ${{ steps.extract_branch.outputs.value }}
          token: ${{ secrets.GH_TOKEN }}
          inputs: ${{ steps.dispatch_message.outputs.value }}