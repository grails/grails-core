# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Grails Joint Validation Build"
#  GROOVY_2_5_X == Grails 4.0.x
#  GROOVY_3_0_X == grails master
#  Groovy master branch does not map to any due to changed package names.
on:
  push:
    branches:
      - '[4-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[4-9]+.[0-9]+.x'
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build_groovy:
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    outputs:
      groovyVersion: ${{ steps.groovy-version.outputs.value }}
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11.0.6'
      - name: Cache local Maven repository & Groovy
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: |
            ~/groovy
            ~/.m2/repository
          key: cache-local-groovy-maven-${{ github.sha }}
      - name: Checkout Groovy 3_0_X (Grails 5 and later)
        if: startsWith(github.ref, 'refs/heads/6.') || startsWith(github.base_ref, '6.') || startsWith(github.ref, 'refs/heads/5.') || startsWith(github.base_ref, '5.')
        run: cd .. && git clone --depth 1 https://github.com/apache/groovy.git -b GROOVY_3_0_X --single-branch
      - name: Get Groovy version for Grails
        id: groovy-version
        run: |
          cd ../groovy
          echo "value=$(cat gradle.properties | grep groovyVersion | cut -d\= -f2 |  tr -d '[:space:]')" >> $GITHUB_OUTPUT
      - name: Prepare GE Set-up Configuration
        id: ge_conf
        run: |
          echo "VALUE<<EOF" >> $GITHUB_OUTPUT
          echo "plugins { " >> $GITHUB_OUTPUT
          echo "    id 'com.gradle.enterprise' version '3.15.1'" >> $GITHUB_OUTPUT 
          echo "    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.11.3'" >> $GITHUB_OUTPUT 
          echo "}" >> $GITHUB_OUTPUT 
          echo "" >> $GITHUB_OUTPUT 
          echo "gradleEnterprise {" >> $GITHUB_OUTPUT 
          echo "    server = 'https://ge.grails.org'" >> $GITHUB_OUTPUT 
          echo "    buildScan {" >> $GITHUB_OUTPUT 
          echo "        publishAlways()" >> $GITHUB_OUTPUT 
          echo "        publishIfAuthenticated()" >> $GITHUB_OUTPUT 
          echo "        uploadInBackground = System.getenv('CI') == null" >> $GITHUB_OUTPUT 
          echo "        capture {" >> $GITHUB_OUTPUT 
          echo "            taskInputFiles = true" >> $GITHUB_OUTPUT 
          echo "        }" >> $GITHUB_OUTPUT 
          echo "    }" >> $GITHUB_OUTPUT 
          echo "}" >> $GITHUB_OUTPUT 
          echo "" >> $GITHUB_OUTPUT
          echo "buildCache {" >> $GITHUB_OUTPUT 
          echo "    local { enabled = System.getenv('CI') != 'true' }" >> $GITHUB_OUTPUT 
          echo "    remote(gradleEnterprise.buildCache) {" >> $GITHUB_OUTPUT 
          echo "        push = System.getenv('CI') == 'true'" >> $GITHUB_OUTPUT
          echo "        enabled = true" >> $GITHUB_OUTPUT 
          echo "    }" >> $GITHUB_OUTPUT 
          echo "}" >> $GITHUB_OUTPUT 
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Gradle Enterprise Set-up
        run: |
          cd ../groovy
          # Delete exiting plugins and build-scan from settings.gradle file
          sed -i '21,31d' settings.gradle
          # Add Gradle Enterprise set-up related configuration after line no 20 in settings.gradle
          echo "${{ steps.ge_conf.outputs.value}}" | sed -i -e "20r /dev/stdin" settings.gradle
      - name: Build and install groovy (no docs)
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_SCANS_ACCEPT: yes
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          build-root-directory: ../groovy
          arguments: |
            install
            -x groovydoc
            -x javadoc
            -x javadocAll
            -x groovydocAll
            -x asciidoc
            -x docGDK
  build_grails:
    needs: [build_groovy]
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Cache local Maven repository & Groovy
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: |
            ~/groovy
            ~/.m2/repository
          key: cache-local-groovy-maven-${{ github.sha }}
      - name: Build Grails
        id: build_grails
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_groovyVersion: ${{ needs.build_groovy.outputs.groovyVersion }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: |
            build 
            -x groovydoc