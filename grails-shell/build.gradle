apply plugin:'application'

mainClassName = "org.grails.cli.GrailsCli"

repositories {
    mavenCentral()
}

ext {
    gradleToolingApiVersion = '7.3-20210825160000+0000'
}

dependencies {
    api project(":grails-bootstrap")
    api project(":grails-gradle-model")
    api "org.apache.ant:ant:$antVersion"
    api "org.apache.groovy:groovy-ant:$groovyVersion"
    api "org.apache.groovy:groovy-json:$groovyVersion"
    api "org.apache.groovy:groovy-jmx:$groovyVersion"
    api "org.fusesource.jansi:jansi:$jansiVersion"
    api "jline:jline:$jlineVersion"
    api "org.gradle:gradle-tooling-api:$gradleToolingApiVersion"
    compileOnly "org.apache.groovy:groovy-templates:$groovyVersion"
    api "org.apache.groovy:groovy-xml:$groovyVersion"

    compileOnly "org.springframework.boot:spring-boot:$springBootVersion"
    compileOnly "org.springframework.boot:spring-boot-loader-tools:$springBootVersion"
    compileOnly "org.springframework:spring-web:$springVersion"
    api "org.springframework.boot:spring-boot-cli:$springBootVersion", {
        exclude group: "org.codehaus.groovy", module: "groovy"
    }
    compileOnly "jakarta.servlet:jakarta.servlet-api:$servletApiVersion"
    implementation("org.apache.maven:maven-resolver-provider:$apacheMavenVersion") {
        exclude group: "com.google.guava", module: "guava"
    }
    compileOnly "net.sf.jopt-simple:jopt-simple:$joptSimpleVersion"

    implementation("org.apache.maven:maven-settings-builder:$apacheMavenVersion") {
        exclude group: "javax.inject", module: "javax.inject"
    }

    implementation "org.sonatype.plexus:plexus-sec-dispatcher:$plexusSecDispatcherVersion"
    implementation("org.sonatype.sisu:sisu-inject-plexus:$plexusSisuInjectVersion") {
        exclude group: "javax.enterprise", module: "cdi-api"
        exclude group: "org.sonatype.sisu", module: "sisu-inject-bean"
    }

    implementation("org.apache.maven.resolver:maven-resolver-connector-basic:$apacheMavenResolverVersion")
    implementation("org.apache.maven.resolver:maven-resolver-impl:$apacheMavenResolverVersion")
    implementation("org.apache.maven.resolver:maven-resolver-transport-file:$apacheMavenResolverVersion")
    implementation("org.apache.maven.resolver:maven-resolver-transport-http:$apacheMavenResolverVersion") {
        exclude group: "org.slf4j", module:"jcl-over-slf4j"
        exclude group: "commons-codec", module:"commons-codec"
    }
    implementation "commons-codec:commons-codec:$commonsCodecVersion"

    testImplementation "net.sf.expectit:expectit-core:$expectitCoreVersion"
    testImplementation "com.github.jnr:jnr-posix:$jnrPosixVersion"

    runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
    runtimeOnly "org.codehaus.plexus:plexus-component-api:$plexusComponentApiVersion"

}

eclipse {
    classpath {
       file {
           whenMerged { classpath ->
                classpath.entries.find { entry -> entry.kind == 'src' && entry.path == "src/test/resources" }?.excludes=["profiles-repository/**", "gradle-sample/**"]
           }
       }
    }
}

apply from: "../gradle/integration-test.gradle"

integrationTest {
    // jline doesn't use jline.terminal system property when TERM is dumb so use different TERM value for tests
    // https://github.com/jline/jline2/blob/6a1b6bf/src/main/java/jline/TerminalFactory.java#L54-L57
    environment 'TERM', 'xterm'
    // execute in single thread
    maxParallelForks = 1
}
