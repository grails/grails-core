idea {
    project {
        jdkName "1.7"
        languageLevel "1.7"
        ipr {
            withXml { provider ->
                def node = provider.asNode()

                // Use Git
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'

                // Apply our code formatting
                node.append(new XmlParser().parse(file("gradle/ideaCodeStyle.xml")))

                // Use the ASL2 license header
                def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }
                copyrightManager.@default = "ASL2"
                def aslCopyright = copyrightManager.copyright.find { it.option.find { it.@name == "myName" }?.@value == "ASL2" }
                if (aslCopyright == null) {
                    copyrightManager.append(new XmlParser().parseText('''
                        <copyright>
                            <option name="notice" value="Copyright $today.year the original author or authors.&#10;&#10;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;you may not use this file except in compliance with the License.&#10;You may obtain a copy of the License at&#10;&#10;     http://www.apache.org/licenses/LICENSE-2.0&#10;&#10;Unless required by applicable law or agreed to in writing, software&#10;distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;See the License for the specific language governing permissions and&#10;limitations under the License." />
                            <option name="keyword" value="Copyright" />
                            <option name="allowReplaceKeyword" value="" />
                            <option name="myName" value="ASL2" />
                            <option name="myLocal" value="true" />
                        </copyright>
                    '''))
                }
            }
        }
    }
}

// referenced in IDEA test classpath
configurations {
    slf4j_simple
}
dependencies {
    slf4j_simple "org.slf4j:slf4j-simple:${slf4jVersion}@jar"
}

subprojects {
    plugins.withType(org.gradle.plugins.ide.idea.IdeaPlugin) {
        idea {
            module {
                // add slf4j-simple to TEST scope
                scopes.TEST?.plus?.add(rootProject.configurations.slf4j_simple)
            }
        }
    }
}